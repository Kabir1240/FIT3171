-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2023-09-12 15:43:53 SGT
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

set echo on
spool pf_schema_output.txt

DROP TABLE clinic CASCADE CONSTRAINTS PURGE;
DROP TABLE drug CASCADE CONSTRAINTS PURGE;
DROP TABLE owner CASCADE CONSTRAINTS PURGE;
DROP TABLE training CASCADE CONSTRAINTS PURGE;
DROP TABLE vet_training CASCADE CONSTRAINTS PURGE;
DROP TABLE pet CASCADE CONSTRAINTS PURGE;
DROP TABLE vet CASCADE CONSTRAINTS PURGE;
DROP TABLE visit CASCADE CONSTRAINTS PURGE;
DROP TABLE service CASCADE CONSTRAINTS PURGE;
DROP TABLE service_account CASCADE CONSTRAINTS PURGE;
DROP TABLE prescription CASCADE CONSTRAINTS PURGE;
DROP TABLE specialisation CASCADE CONSTRAINTS PURGE;

CREATE TABLE clinic (
    clinic_id      NUMBER(2) NOT NULL,
    clinic_name    CHAR(20) NOT NULL,
    clinic_address VARCHAR2(200) NOT NULL,
    clinic_contact NUMBER(12) NOT NULL,
    clinic_head    NUMBER(2) NOT NULL
);

COMMENT ON COLUMN clinic.clinic_id IS
    'clinic id, primary key';

COMMENT ON COLUMN clinic.clinic_name IS
    'clinic name';

COMMENT ON COLUMN clinic.clinic_address IS
    'clinic address';

COMMENT ON COLUMN clinic.clinic_contact IS
    'clinic contact';

COMMENT ON COLUMN clinic.clinic_head IS
    'vet id';

CREATE UNIQUE INDEX clinic__idx ON
    clinic (
        clinic_head
    ASC );

ALTER TABLE clinic ADD CONSTRAINT clinic_pk PRIMARY KEY ( clinic_id );

CREATE TABLE drug (
    drug_id   NUMBER(3) NOT NULL,
    drug_name VARCHAR2(50) NOT NULL
);

COMMENT ON COLUMN drug.drug_id IS
    'drug id';

COMMENT ON COLUMN drug.drug_name IS
    'drug name';

ALTER TABLE drug ADD CONSTRAINT drug_pk PRIMARY KEY ( drug_id );

CREATE TABLE owner (
    owner_id      CHAR(3) NOT NULL,
    owner_gname   VARCHAR2(20) NOT NULL,
    owner_fname   VARCHAR2(20) NOT NULL,
    owner_contact CHAR(12)
);

COMMENT ON COLUMN owner.owner_id IS
    'unique id of owner';

COMMENT ON COLUMN owner.owner_gname IS
    'given name of owner';

COMMENT ON COLUMN owner.owner_fname IS
    'family name of owner';

COMMENT ON COLUMN owner.owner_contact IS
    'owner contact number';

ALTER TABLE owner ADD CONSTRAINT owner_pk PRIMARY KEY ( owner_id );

CREATE TABLE pet (
    pet_id         CHAR(3) NOT NULL,
    pet_name       VARCHAR2(30) NOT NULL,
    pet_type       VARCHAR2(15) NOT NULL,
    pet_birth_year DATE NOT NULL,
    owner_id       CHAR(3) NOT NULL
);

COMMENT ON COLUMN pet.pet_id IS
    'unique id of pet';

COMMENT ON COLUMN pet.pet_name IS
    'name of pet';

COMMENT ON COLUMN pet.pet_type IS
    'type of pet';

COMMENT ON COLUMN pet.pet_birth_year IS
    'pet date of birth';

COMMENT ON COLUMN pet.owner_id IS
    'unique id of owner';

ALTER TABLE pet ADD CONSTRAINT pet_pk PRIMARY KEY ( pet_id );

CREATE TABLE prescription (
    visit_id              NUMBER(3) NOT NULL,
    drug_id               NUMBER(3) NOT NULL,
    prescrip_freq         NUMBER(1) NOT NULL,
    prescrip_dose         NUMBER(3) NOT NULL,
    prescrip_qty_supplied NUMBER(3) NOT NULL,
    prescrip_line_cost    NUMBER(5, 2) NOT NULL
);

COMMENT ON COLUMN prescription.visit_id IS
    'surrogate key for visit';

COMMENT ON COLUMN prescription.drug_id IS
    'drug id';

COMMENT ON COLUMN prescription.prescrip_freq IS
    'frequency of drug prescription';

COMMENT ON COLUMN prescription.prescrip_dose IS
    'drug prescription dose in g';

COMMENT ON COLUMN prescription.prescrip_qty_supplied IS
    'quantity supplied of drug';

COMMENT ON COLUMN prescription.prescrip_line_cost IS
    'line cost';

ALTER TABLE prescription ADD CONSTRAINT prescription_pk PRIMARY KEY ( drug_id,
                                                                      visit_id );

CREATE TABLE service (
    serv_code CHAR(5) NOT NULL,
    serv_desc VARCHAR2(50) NOT NULL
);

COMMENT ON COLUMN service.serv_code IS
    'service code';

COMMENT ON COLUMN service.serv_desc IS
    'service description';

ALTER TABLE service ADD CONSTRAINT service_pk PRIMARY KEY ( serv_code );

CREATE TABLE service_account (
    serv_code              CHAR(5) NOT NULL,
    visit_id               NUMBER(3) NOT NULL,
    serv_account_line_cost NUMBER(5, 2)
);

COMMENT ON COLUMN service_account.serv_code IS
    'service code';

COMMENT ON COLUMN service_account.visit_id IS
    'surrogate key for visit';

COMMENT ON COLUMN service_account.serv_account_line_cost IS
    'price of service';

ALTER TABLE service_account ADD CONSTRAINT visit_service_pk PRIMARY KEY ( serv_code,
                                                                          visit_id );

CREATE TABLE specialisation (
    specialisation_id   VARCHAR2(5) NOT NULL,
    sepcialisation_name CHAR(30) NOT NULL,
    vet_id              NUMBER(2) NOT NULL
);

COMMENT ON COLUMN specialisation.specialisation_id IS
    'specialisation id';

COMMENT ON COLUMN specialisation.sepcialisation_name IS
    'specialisation name';

COMMENT ON COLUMN specialisation.vet_id IS
    'vet id';

CREATE UNIQUE INDEX specialisation__idx ON
    specialisation (
        vet_id
    ASC );

ALTER TABLE specialisation ADD CONSTRAINT specialization_pk PRIMARY KEY ( specialisation_id
);

CREATE TABLE training (
    tr_id        NUMBER(3) NOT NULL,
    tr_name      CHAR(30) NOT NULL,
    tr_duration  DATE NOT NULL,
    tr_date_time DATE NOT NULL,
    clinic_id    NUMBER(2) NOT NULL,
    vet_id       NUMBER(2) NOT NULL
);

COMMENT ON COLUMN training.tr_id IS
    'training course  id';

COMMENT ON COLUMN training.tr_name IS
    'training course name';

COMMENT ON COLUMN training.tr_duration IS
    'training course  duration (in hh:mm)';

COMMENT ON COLUMN training.tr_date_time IS
    'training course start date and time';

COMMENT ON COLUMN training.clinic_id IS
    'clinic id, primary key';

COMMENT ON COLUMN training.vet_id IS
    'vet id';

ALTER TABLE training ADD CONSTRAINT training_pk PRIMARY KEY ( tr_id );

CREATE TABLE vet (
    vet_id          NUMBER(2) NOT NULL,
    vet_gname       CHAR(10) NOT NULL,
    vet_fname       CHAR(10) NOT NULL,
    vet_ph_no       NUMBER(12) NOT NULL,
    vet_employ_date DATE NOT NULL,
    vet_base_id     NUMBER(2) NOT NULL
);

COMMENT ON COLUMN vet.vet_id IS
    'vet id';

COMMENT ON COLUMN vet.vet_gname IS
    'vet given name';

COMMENT ON COLUMN vet.vet_fname IS
    'vet family name';

COMMENT ON COLUMN vet.vet_ph_no IS
    'vet phone number';

COMMENT ON COLUMN vet.vet_employ_date IS
    'vet employment start date';

COMMENT ON COLUMN vet.vet_base_id IS
    'clinic id, primary key';

ALTER TABLE vet ADD CONSTRAINT vet_pk PRIMARY KEY ( vet_id );

CREATE TABLE vet_training (
    tr_id            NUMBER(3) NOT NULL,
    vet_id           NUMBER(2) NOT NULL,
    vet_tr_completed CHAR(1) DEFAULT 'N' NOT NULL,
    vet_tr_expiry    DATE NOT NULL
);

ALTER TABLE vet_training
    ADD CONSTRAINT chk_vet_tr_completed CHECK ( vet_tr_completed IN ( 'N', 'Y' ) );

COMMENT ON COLUMN vet_training.tr_id IS
    'training course  id';

COMMENT ON COLUMN vet_training.vet_id IS
    'vet id';

COMMENT ON COLUMN vet_training.vet_tr_completed IS
    'if vet has completed training course or not';

COMMENT ON COLUMN vet_training.vet_tr_expiry IS
    'expiration date of training course certification';

ALTER TABLE vet_training ADD CONSTRAINT vet_training_pk PRIMARY KEY ( tr_id,
                                                                      vet_id );

CREATE TABLE visit (
    visit_id             NUMBER(3) NOT NULL,
    visit_datetime       DATE NOT NULL,
    vet_id               NUMBER(2) NOT NULL,
    visit_pet_weight     NUMBER(3) NOT NULL,
    visit_length         NUMBER(3) NOT NULL,
    visit_notes          VARCHAR2(300),
    visit_total_amount   NUMBER(7) NOT NULL,
    visit_payment_method CHAR(1) NOT NULL,
    pet_id               CHAR(3) NOT NULL,
    clinic_id            NUMBER(2) NOT NULL,
    visit_followup       NUMBER(3)
);

ALTER TABLE visit
    ADD CONSTRAINT chk_visit_pay_method CHECK ( visit_payment_method IN ( 'C', 'E' ) )
    ;

COMMENT ON COLUMN visit.visit_id IS
    'surrogate key for visit';

COMMENT ON COLUMN visit.visit_datetime IS
    'date and time of visit';

COMMENT ON COLUMN visit.vet_id IS
    'vet id';

COMMENT ON COLUMN visit.visit_pet_weight IS
    'weight of pet in visit';

COMMENT ON COLUMN visit.visit_length IS
    'visit length in minutes';

COMMENT ON COLUMN visit.visit_notes IS
    'notes made by vet for visit';

COMMENT ON COLUMN visit.visit_total_amount IS
    'total cost of services in visit';

COMMENT ON COLUMN visit.visit_payment_method IS
    'method of payment (cash/EFT)';

COMMENT ON COLUMN visit.pet_id IS
    'unique id of pet';

COMMENT ON COLUMN visit.clinic_id IS
    'clinic id, primary key';

COMMENT ON COLUMN visit.visit_followup IS
    'surrogate key for visit';

CREATE UNIQUE INDEX visit__idx ON
    visit (
        visit_followup
    ASC );

ALTER TABLE visit ADD CONSTRAINT visit_pk PRIMARY KEY ( visit_id );

ALTER TABLE visit ADD CONSTRAINT visit_nk UNIQUE ( visit_datetime,
                                                   vet_id );

ALTER TABLE training
    ADD CONSTRAINT clinic_training FOREIGN KEY ( clinic_id )
        REFERENCES clinic ( clinic_id );

ALTER TABLE vet
    ADD CONSTRAINT clinic_vet FOREIGN KEY ( vet_base_id )
        REFERENCES clinic ( clinic_id );

ALTER TABLE visit
    ADD CONSTRAINT clinic_visit FOREIGN KEY ( clinic_id )
        REFERENCES clinic ( clinic_id );

ALTER TABLE prescription
    ADD CONSTRAINT drug_prescription FOREIGN KEY ( drug_id )
        REFERENCES drug ( drug_id );

ALTER TABLE pet
    ADD CONSTRAINT pet_owner FOREIGN KEY ( owner_id )
        REFERENCES owner ( owner_id );

ALTER TABLE visit
    ADD CONSTRAINT pet_visit FOREIGN KEY ( pet_id )
        REFERENCES pet ( pet_id );

ALTER TABLE service_account
    ADD CONSTRAINT service_vs FOREIGN KEY ( serv_code )
        REFERENCES service ( serv_code );

ALTER TABLE vet_training
    ADD CONSTRAINT training_vet_training FOREIGN KEY ( tr_id )
        REFERENCES training ( tr_id );

ALTER TABLE clinic
    ADD CONSTRAINT vet_clinic FOREIGN KEY ( clinic_head )
        REFERENCES vet ( vet_id );

ALTER TABLE specialisation
    ADD CONSTRAINT vet_specialisation FOREIGN KEY ( vet_id )
        REFERENCES vet ( vet_id );

ALTER TABLE training
    ADD CONSTRAINT vet_training FOREIGN KEY ( vet_id )
        REFERENCES vet ( vet_id );

ALTER TABLE vet_training
    ADD CONSTRAINT vet_training_vet FOREIGN KEY ( vet_id )
        REFERENCES vet ( vet_id );

ALTER TABLE visit
    ADD CONSTRAINT vet_visit FOREIGN KEY ( vet_id )
        REFERENCES vet ( vet_id );

ALTER TABLE prescription
    ADD CONSTRAINT visit_prescription FOREIGN KEY ( visit_id )
        REFERENCES visit ( visit_id );

ALTER TABLE visit
    ADD CONSTRAINT visit_visit FOREIGN KEY ( visit_followup )
        REFERENCES visit ( visit_id );

ALTER TABLE service_account
    ADD CONSTRAINT visit_vs FOREIGN KEY ( visit_id )
        REFERENCES visit ( visit_id );

                           
spool off
set echo off

-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            12
-- CREATE INDEX                             4
-- ALTER TABLE                             31
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
